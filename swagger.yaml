tags:
  - name: users
    description: users API
  - name: movies
    description: movies API

paths:
  # [GET] users
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] users
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  # [GET] movies
  /movies:
    get:
      tags:
        - movies
      summary: Find All Movies
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] movies
    post:
      tags:
        - movies
      summary: Add Movie
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/movies'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

          # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] movie/id
  /movies/{id}:
    get:
      tags:
        - movies
      summary: Find Movie By Id
      parameters:
        - name: id
          in: path
          description: Movie Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] movies/id
    put:
      tags:
        - movies
      summary: Update Movie By Id
      parameters:
        - name: id
          in: path
          description: movie Id
          required: true
        - name: body
          in: body
          description: movie Data
          required: true
          schema:
            $ref: '#/definitions/movies'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] movies/id
    delete:
      tags:
        - movies
      summary: Delete Movie By Id
      parameters:
        - name: id
          in: path
          description: movie Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  user:
    type: object
    required:
      - email
      - password
    properties:
      id:
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  movie:
    type: object
    required:
    properties:
      id:
        description: movie Id
      title:
        type: string
        description: movie Title
      description:
        type: string
        description: movie Description
      rating:
        type: string
        description: movie Rating
      score: 
        type: string
        description: movie description 
      length: 
        type: string
        description: movie length
      review: 
        type: string
        description: the user's review if provided
      released: 
        type: date
        description: release year of movie
      platforms: 
        type: string[]
        description: where you can watch the movie
      genres: 
        type: string[]
        description: movie's genres
      tags: 
        type: string[]
        description: user tags
      posterImg: 
        type: string
        description: src of movie poster image
      trailer: 
        type: string
        description: src of movie trailer
      cast: 
        type: string[]
        description: list of cast members 
      desire to see: 
        type: number
        description: desire to see rating out of 10
      mentions: 
        type: number
        description: counter of mentions in the wild, adding to weight

schemes:
  - https
  - http
